const showColleagueKeyboardPassenger = async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: {
      keyboard: [
        [{ text: 'üöó –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ' }],
        [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å' }],
        [{ text: 'üìã –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –±—Ä–æ–Ω–∏' }],
        [{ text: 'üöô –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª–µ–π' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥' }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

const showPassengerTaxiKeyboard = async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: {
      keyboard: [
        [{ text: 'üöï –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ –≤ —Ç–∞–∫—Å–∏' }],
        [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å –≤ —Ç–∞–∫—Å–∏' }],
        [{ text: 'üë• –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏—Ö –ø–æ–ø—É—Ç—á–∏–∫–æ–≤ –∫–∞–∫ –ø–∞—Å—Å–∞–∂–∏—Ä' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥' }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

const showPassengerOrderedTaxiKeyboard = async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: {
      keyboard: [
        [{ text: 'üöñ –ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –Ω–∞ —Ç–∞–∫—Å–∏' }],
        [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å' }],
        [{ text: 'üöó –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–µ —Ç–∞–∫—Å–∏' }],
        [{ text: 'üë• –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏—Ö –ø–æ–ø—É—Ç—á–∏–∫–æ–≤' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥' }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

const showTaxiKeyboard = async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: {
      keyboard: [
        [{ text: 'üöñ –ó–∞–∫–∞–∑—ã–≤–∞—é—â–∏–π' }],
        [{ text: 'üöï –ü–∞—Å—Å–∞–∂–∏—Ä' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥' }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

const showMainMenuPassenger = async (ctx) => {
  await ctx.reply('–ú–µ–Ω—é:', {
    reply_markup: {
      keyboard: [
        [{ text: 'üöó –ö–æ–ª–ª–µ–≥–∞ - –≤–æ–¥–∏—Ç–µ–ª—å' }],
        [{ text: 'üöï –¢–∞–∫—Å–∏' }],
        [{ text: 'üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å' }],
        [{ text: '‚ÑπÔ∏è –û –±–æ—Ç–µ' }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

const showUserProfileMenu = async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', {
    reply_markup: {
      keyboard: [
        [{ text: 'üë§ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å' }],
        [{ text: '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å' }],
        [{ text: 'üîô –ù–∞–∑–∞–¥' }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

const showMainMenuDrivers = async (ctx) => {
  await ctx.reply('–ú–µ–Ω—é:', {
    reply_markup: {
      keyboard: [
        [{ text: 'üöó –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤' }],
        [{ text: 'üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å' }],
        [{ text: '‚ÑπÔ∏è –û –±–æ—Ç–µ' }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
};

export {
  showColleagueKeyboardPassenger,
  showTaxiKeyboard,
  showMainMenuPassenger,
  showUserProfileMenu,
  showMainMenuDrivers,
  showPassengerOrderedTaxiKeyboard,
  showPassengerTaxiKeyboard,
};
